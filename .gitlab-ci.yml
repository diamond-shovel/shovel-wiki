stages:
  - build
  - test
  - deploy
deploy_to_test_env:
  stage: build
  image: python:3.9
  tags:
    - docker
  script:
    - export PIP_INDEX_URL=https://mirrors.aliyun.com/pypi/simple/
    - pip install mkdocs mkdocs-material mkdocs-minify-plugin
    - mkdocs build
    # mkdocs serve -a 0.0.0.0:port 即可改为自动部署到测试环境，但是需要在docker中穿出对应的端口
  artifacts:
    paths:
      - site
    expire_in: 1 week

test_docker:
  stage: test
  image: gitlab.cyberspike.top:5050/docker/docker:dind
  services:
    - name: gitlab.cyberspike.top:5050/docker/docker:dind
      alias: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker compose up
  tags:
    - docker

deploy_to_prod_env:
  stage: deploy
  image: python:3.9
  tags:
    - docker
  script:
    - export PIP_INDEX_URL=https://mirrors.aliyun.com/pypi/simple/
    - pip install mkdocs mkdocs-material mkdocs-minify-plugin
    - mkdocs gh-deploy # 自动推送，这步请勿随意执行，直接会推送到生产环境
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: always